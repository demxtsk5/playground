Vagrant.configure("2") do |config|
  # Define the SSH public key for the user 'mg0050'
  ssh_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPqxEMsu0Nmi+B9yf6WdkkxWIUKzgc5VZUM4URMiZH0cawIHFd1SHiptcOaNm6DZPKF+haguMMSew/HPhiF2bFHTba3YYsAify2KuN1m2hUkaWGb+OSxPsp2d/FCh4wyMY9YMXnM+NDFx54meDLJwjfLdeRTlcZ/1YOIEpiMC6VSAmHG0c97H5yxfcS2mu8y7+mRUtIIFJbx7OFDe9v22+KXSEoChscQv57ORfAW/KkT1SZICTi4I0sHob5GcTcsO9jfj5BvknV3Xng14Jkz26SeYA16VkvMjdPofa/HgHGfLHkwZWjJBROkY3Hk0qbg02SAnvlhUjdxi1xZ1tDUVv mg0050@L00026.fritz.box"

  # Define the root password and user password
  root_password = ENV['ROOT_PW']

  # VM infra
  config.vm.define "infra" do |infra|
    infra.vm.box = "bento/debian-11"
    infra.vm.network "public_network", ip: "192.168.64.131"
    infra.vm.hostname = "infra"

    infra.vm.provider "vmware_desktop" do |vmware|
      vmware.vmx["memsize"] = "2048"   # Memory in MB
      vmware.vmx["numvcpus"] = "1"     # Number of CPUs
    end

    # Set up provisioning to configure root password, create new user, and set SSH key
    infra.vm.provision "shell", inline: <<-SHELL
      # Set root password
      echo "root:#{root_password}" | sudo chpasswd

      # Create new user mg0050
      sudo useradd -m -s /bin/bash mg0050

      # Add user mg0050 to the sudoers file
      echo "mg0050 ALL=(ALL) NOPASSWD: ALL" | sudo tee -a /etc/sudoers
      sudo visudo -c

      # Set up SSH access for mg0050
      sudo mkdir -p /home/mg0050/.ssh
      echo "#{ssh_key}" | sudo tee /home/mg0050/.ssh/authorized_keys
      sudo chown -R mg0050:mg0050 /home/mg0050/.ssh
      sudo chmod 700 /home/mg0050/.ssh
      sudo chmod 600 /home/mg0050/.ssh/authorized_keys
    SHELL
  end

  # VM k8s_m1
  config.vm.define "k8s_m1" do |k8s_m1|
    k8s_m1.vm.box = "bento/debian-11"
    k8s_m1.vm.network "public_network", ip: "192.168.64.132"
    k8s_m1.vm.hostname = "k8s-m1"

    k8s_m1.vm.provider "vmware_desktop" do |vmware|
      vmware.vmx["memsize"] = "2048"   # Memory in MB
      vmware.vmx["numvcpus"] = "1"     # Number of CPUs
    end

    # Set up provisioning to configure root password, create new user, and set SSH key
    k8s_m1.vm.provision "shell", inline: <<-SHELL
      # Set root password
      echo "root:#{root_password}" | sudo chpasswd

      # Create new user mg0050
      sudo useradd -m -s /bin/bash mg0050

      # Add user mg0050 to the sudoers file
      echo "mg0050 ALL=(ALL) NOPASSWD: ALL" | sudo tee -a /etc/sudoers
      sudo visudo -c

      # Set up SSH access for mg0050
      sudo mkdir -p /home/mg0050/.ssh
      echo "#{ssh_key}" | sudo tee /home/mg0050/.ssh/authorized_keys
      sudo chown -R mg0050:mg0050 /home/mg0050/.ssh
      sudo chmod 700 /home/mg0050/.ssh
      sudo chmod 600 /home/mg0050/.ssh/authorized_keys
    SHELL
  end

  # VM k8s_n1
  config.vm.define "k8s_n1" do |k8s_n1|
    k8s_n1.vm.box = "bento/debian-11"
    k8s_n1.vm.network "public_network", ip: "192.168.64.133"
    k8s_n1.vm.hostname = "k8s-n1"

    k8s_n1.vm.provider "vmware_desktop" do |vmware|
      vmware.vmx["memsize"] = "2048"   # Memory in MB
      vmware.vmx["numvcpus"] = "2"     # Number of CPUs
    end

    # Set up provisioning to configure root password, create new user, and set SSH key
    k8s_n1.vm.provision "shell", inline: <<-SHELL
      # Set root password
      echo "root:#{root_password}" | sudo chpasswd

      # Create new user mg0050
      sudo useradd -m -s /bin/bash mg0050

      # Add user mg0050 to the sudoers file
      echo "mg0050 ALL=(ALL) NOPASSWD: ALL" | sudo tee -a /etc/sudoers
      sudo visudo -c

      # Set up SSH access for mg0050
      sudo mkdir -p /home/mg0050/.ssh
      echo "#{ssh_key}" | sudo tee /home/mg0050/.ssh/authorized_keys
      sudo chown -R mg0050:mg0050 /home/mg0050/.ssh
      sudo chmod 700 /home/mg0050/.ssh
      sudo chmod 600 /home/mg0050/.ssh/authorized_keys
    SHELL
  end

  # VM k8s_n2
  config.vm.define "k8s_n2" do |k8s_n2|
    k8s_n2.vm.box = "bento/debian-11"
    k8s_n2.vm.network "public_network", ip: "192.168.64.133"
    k8s_n2.vm.hostname = "k8s-n2"

    k8s_n2.vm.provider "vmware_desktop" do |vmware|
      vmware.vmx["memsize"] = "2048"   # Memory in MB
      vmware.vmx["numvcpus"] = "2"     # Number of CPUs
    end

    # Set up provisioning to configure root password, create new user, and set SSH key
    k8s_n2.vm.provision "shell", inline: <<-SHELL
      # Set root password
      echo "root:#{root_password}" | sudo chpasswd

      # Create new user mg0050
      sudo useradd -m -s /bin/bash mg0050

      # Add user mg0050 to the sudoers file
      echo "mg0050 ALL=(ALL) NOPASSWD: ALL" | sudo tee -a /etc/sudoers
      sudo visudo -c

      # Set up SSH access for mg0050
      sudo mkdir -p /home/mg0050/.ssh
      echo "#{ssh_key}" | sudo tee /home/mg0050/.ssh/authorized_keys
      sudo chown -R mg0050:mg0050 /home/mg0050/.ssh
      sudo chmod 700 /home/mg0050/.ssh
      sudo chmod 600 /home/mg0050/.ssh/authorized_keys
    SHELL
  end

  # VM k8s_n3
  config.vm.define "k8s_n3" do |k8s_n3|
    k8s_n3.vm.provider "vmware"
    k8s_n3.vm.box = "bento/debian-11"
    k8s_n3.vm.network "public_network", ip: "192.168.64.134"
    k8s_n3.vm.hostname = "k8s-n3"

    # Set up provisioning to configure root password, create new user, and set SSH key
    k8s_n3.vm.provision "shell", inline: <<-SHELL
      # Set root password
      echo "root:#{root_password}" | sudo chpasswd

      # Create new user mg0050
      sudo useradd -m -s /bin/bash mg0050

      # Set up SSH access for mg0050
      sudo mkdir -p /home/mg0050/.ssh
      echo "#{ssh_key}" | sudo tee /home/mg0050/.ssh/authorized_keys
      sudo chown -R mg0050:mg0050 /home/mg0050/.ssh
      sudo chmod 700 /home/mg0050/.ssh
      sudo chmod 600 /home/mg0050/.ssh/authorized_keys
    SHELL
  end
end
